#!/usr/bin/env bash

function cleandir()
{
	echo
	echo "=== Cleaning ${1}"
	# If makefile still exists, try "make clean"
	if [[ -e Makefile ]]; then
		make --quiet -C "${1}" clean
	fi
	rm -vrf "${1}/CMakeFiles"
	rm -vf  "${1}/CMakeCache.txt"
	rm -vf  "${1}/Makefile"
	rm -vf  "${1}/cmake_install.cmake"

	# Visual studio files
	rm -vrf  "${1}"/*.dir
	rm -vf   "${1}"/*.vcxproj
	rm -vf   "${1}"/*.vcxproj.filters
	rm -vf   "${1}"/*.vcxproj.user
	rm -vrf  "${1}/.vs"
	rm -vf   "${1}/opengl-examples.VC.db"
	rm -vf   "${1}/opengl-examples.sln"
	
	# Text editor backup files:
	rm -vf *~ \#*\#
}

# Get the directory that this script is in (might not be the same as
# the current working directory).
THIS_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# Clean top level directory first so 'make clean' will work.
cleandir "${THIS_DIR}"

# Clean subdirectories
for D in *; do # For each file and directory
    if [ -d "${D}" ]; then # If it is a directory
		if [[ -e "${D}/CMakeLists.txt" ]]; then # if CMakeLists file is present. We don't want to run in the bin folder because that makefile isn't generated by cmake.
			cleandir "${THIS_DIR}/${D}"
		fi
    fi
done

echo
echo "=== Cleaning ${THIS_DIR}/bin"
# Remove files created on windows
rm -vf "${THIS_DIR}/bin/"*.exe "${THIS_DIR}/bin/"*.dll "${THIS_DIR}/bin/"*.ilk "${THIS_DIR}/bin/"*.pdb "${THIS_DIR}/bin/kuhl.lib"
# These files shouldn't be here, but if someone accidentally puts them there, it breaks 'make' in the bin folder.
rm -vf "${THIS_DIR}/bin/CMakeCache.txt" "${THIS_DIR}/bin/cmake_install.cmake" 
# Mac:
rm -vrf "${THIS_DIR}/bin/"*.dSYM

echo
echo "=== Cleaning other files"
# If "out" folder exists and appears to contain visual studio stuff, delete it.
if [[ -e "${THIS_DIR}/out/build/x64-Debug/CMakeCache.txt" ]]; then
	rm -vrf "${THIS_DIR}/out"
fi
# Delete documentation files made by doxygen
rm -vrf "${THIS_DIR}/doxygen-docs"

# Find log files anywhere in this tree and delete them.
find "${THIS_DIR}" -type f \( -name 'log.txt' -o -name 'log-ivs-left.txt' -o -name 'log-ivs-right.txt' \) -exec rm -vf "{}" \;

if [[ -x "${THIS_DIR}/.git" && -x /usr/bin/git ]]; then
	echo
	echo
	echo "Consider removing the following files because they are not in the git repo and are not ignored:"
	echo
	pushd "${THIS_DIR}" > /dev/null
	git ls-files --others --exclude-standard
	popd > /dev/null
fi
